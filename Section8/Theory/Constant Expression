
# constexpr #

* Represents an expression that is constant.

* Such expressions are possibly evaluated at compile time.

* Can be applied to variable declarations or functions.

* Many increase the performance of the code as computation is done at compile time.

* A function can be a constexpr only if returns a value that can be computed at compile time. A function like this must accept and return only literal types
(types that are accepted in a constant expression)

* A constantexpr allow only a single line statement inside, and that statement is the return statement

# const vs constexpr #

* Initialization of a const variable can be deferred until runtime, however, a constexpr variable must be initialized at compile time.

* All constexpr variables are const, but not the other way around.

* Use const keyword to indicate the value cannot be modified ; Use constexpr to create expressions that can be evaluated at compile time.